// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/vladwithcode/sibra-site/internal/db"

var picFormScriptHandle = templ.NewOnceHandle()

func UpdatePropImagesForm(property *db.Property, successfulUpdate bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"prop-data-wrapper\" hx-swap-oob=\"outerHTML\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.JSONScript("property-data", property).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><script id=\"update-prop-pic-form-script\">\n        const MAX_PIC_COUNT = 12\n        let newPics = []\n        const delPics = new Set()\n        const emptyPicsMsg = \"<p id=\\\"update-prop-pic-form-empty\\\" class=\\\"text-lg text-slate-300 font-bold py-12\\\">Agrega imagenes de la propiedad</p>\"\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            initUpdateForm(MAX_PIC_COUNT, emptyPicsMsg, newPics, delPics)\n\n            htmx.on(\"htmx:configRequest\", e => {\n                if (e.target.id !== \"property-pic-form\") {\n                    return\n                }\n\n                delete e.detail.parameters[\"pics-inp\"]\n                e.detail.parameters[\"pics\"] = []\n                e.detail.parameters[\"newPics\"] = []\n                e.detail.parameters[\"delPics\"] = []\n\n                for (let pic of newPics) {\n                    pic.file.id = pic.id\n                    e.detail.parameters[\"pics\"].push(pic.file)\n                    e.detail.parameters[\"newPics\"].push(pic.id + \";\" + pic.fileName)\n                }\n\n                for (let pic of delPics.values()) {\n                    e.detail.parameters[\"delPics\"].push(pic)\n                }\n\n                gsap.to(\n                    \"#property-pic-form-loading-spinner\",\n                    { autoAlpha: 1, height: \"100%\", width: \"100%\", ease: \"power2.in\" },\n                )\n                document.getElementById(\"update-prop-pic-form-submit\").disabled = true\n            })\n\n            htmx.on(\"htmx:afterSwap\", e => {\n                if (e.target.id !== \"property-pic-form\") {\n                    return\n                }\n\n                newPics = []\n                delPics.clear()\n                initUpdateForm(MAX_PIC_COUNT, emptyPicsMsg, newPics, delPics)\n                gsap.to(\n                    \"#property-pic-form-loading-spinner\",\n                    { autoAlpha: 0, height: \"0%\", width: \"0%\", ease: \"power2.in\" },\n                )\n                document.getElementById(\"update-prop-pic-form-submit\").disabled = false\n\n                let propertyPicForm = document.getElementById(\"property-pic-form\")\n\n                if (propertyPicForm.hasAttribute(\"data-successful-update\")) {\n                    gsap.to(propertyPicForm, {\n                        borderColor: \"rgb(34 197 94)\",\n                        boxShadow: \"0px 2px 10px 1px rgb(34 197 94/10%)\",\n                        duration: 0.4,\n                    })\n                    gsap.from(\"#property-pic-form-success-msg\", {\n                        autoAlpha: 0,\n                        height: 0,\n                        duration: 0.4,\n                    }, \"<\")\n                    resetTimerID = setTimeout(() => {\n                        gsap.to(propertyPicForm, { borderColor: \"\", boxShadow: \"0px 0px 0px 0px transparent\" })\n                        gsap.to(\"#property-pic-form-success-msg\", { autoAlpha: 0, height: 0 }, \"<\")\n\n                        gsap.delayedCall(0.5, () => document.getElementById(\"property-pic-form-success-msg\").remove())\n                    }, 3000)\n                }\n            })\n        })\n\n        function initUpdateForm(maxPicCount, emptyPicsMsg, newPics, delPics) {\n            let propertyData = getPropertyData()\n            if (propertyData.imgs === null) {\n                propertyData.imgs = []\n            }\n\n            let delBtns = document.querySelectorAll(\"[data-pic-del-btn]\")\n            for (let btn of delBtns) {\n                btn.addEventListener(\"click\", handleDeletePic)\n            }\n            let restoreBtns = document.querySelectorAll(\"[data-pic-restore-btn]\")\n            for (let btn of restoreBtns) {\n                btn.addEventListener(\"click\", () => {\n                    btn.parentElement.classList.remove(\"is-del-pic\")\n                    delPics.delete(btn.dataset.picRestoreBtn)\n                })\n            }\n\n            document.getElementById(\"pics-inp\").addEventListener(\"change\", e => {\n                if (propertyData.imgs.length >= maxPicCount) {\n                    alert(\"No puedes agregar más de \"+ maxPicCount + \" imagenes.\")\n                    e.preventDefault()\n                    e.target.value = \"\"\n                    return\n                }\n                document.getElementById(\"update-prop-pic-form-empty\")?.remove()\n                let picPreview = document.getElementById(\"picture-preview\")\n\n                for (let pic of e.target.files) {\n                    let picData = {\n                        id: \"new-prop-pic-\" + Date.now().toString() + \"-\" + propertyData.id,\n                        alt: \"Imagen\",\n                        file: pic,\n                        fileName: pic.name,\n                    }\n                    picData.el = createPicElement(picData)\n\n                    picPreview.appendChild(picData.el)\n                    newPics.push(picData)\n                }\n\n                // Always clear file input\n                e.target.value = \"\"\n            })\n            document.getElementById(\"main-pic\").addEventListener(\"change\", e => {\n                if (e.target.files.length === 0 || e.target.files.length > 1) {\n                    alert(\"¡La imagen principal es requerida y solo debe ser 1!\");\n                    return\n                }\n                document.getElementById(\"update-prop-pic-form-main-empty\")?.remove()\n                let mainPic = createPicElement({ \n                    id: \"new-prop-main-pic-\" + propertyData.id,\n                    alt: \"Imagen principal para la propiedad con id \" + propertyData.id,\n                    file: e.target.files[0],\n                    fileName: e.target.files[0].name,\n                    onDelete: () => {\n                        document.getElementById(\"main-pic\").value = \"\"\n                    }\n                })\n                mainPic.setAttribute(\"data-is-main-pic\", \"\")\n                document.getElementById(\"main-preview\").innerHTML = \"\"\n                document.getElementById(\"main-preview\").appendChild(mainPic)\n            })\n        }\n        function createPicElement(picData) {\n            let imgWrapper = document.createElement(\"div\")\n            imgWrapper.className = \"relative z-0 w-72 aspect-video is-new-pic\"\n            imgWrapper.id = picData.id\n            imgWrapper.setAttribute(\"data-is-new-pic\", \"\")\n\n            let imgEl = document.createElement(\"img\")\n            imgEl.className = \"h-full w-full object-cover object-center rounded\"\n            imgEl.src = URL.createObjectURL(picData.file)\n            imgEl.alt = picData.alt\n            // imgEl.addEventListener(\"click\", function(e) { console.log(this); })\n\n            let delBtn = document.createElement(\"button\")\n            delBtn.className = \"absolute top-2 right-2 h-6 w-6 opacity-80 hover:opacity-100 drop-shadow-slate-800 hover:drop-shadow-2xl\"\n            delBtn.innerHTML = `<svg class=\"h-6 w-6 fill-slate-50 z-10 hover:fill-red-500 \">\n    <use href=\"/static/svg/times.svg#times\"></use>\n</svg>`\n            delBtn.type = \"button\"\n            delBtn.dataset.picDelBtn = picData.id\n            delBtn.addEventListener(\"click\", function(e) {\n                handleDeletePic.apply(this, [e])\n                if (typeof picData.onDelete === \"function\") {\n                    picData.onDelete.apply(this, [e])\n                }\n            })\n\n            imgWrapper.appendChild(imgEl)\n            imgWrapper.appendChild(delBtn)\n            return imgWrapper\n        }\n        function handleDeletePic(e) {\n            e.preventDefault()\n            let isNewPic = this.parentElement.hasAttribute(\"data-is-new-pic\")\n            let isMainPic = this.parentElement.hasAttribute(\"data-is-main-pic\")\n            let picId = this.dataset.picDelBtn\n\n            if (isNewPic) {\n                newPics = newPics.filter(pic => pic.id !== picId)\n                this.parentElement.remove()\n                return\n            }\n\n            delPics.add(picId)\n            this.parentElement.classList.add(\"is-del-pic\")\n            this.parentElement.setAttribute(\"data-is-del-pic\", \"\")\n            let picCount = getPropertyData().imgs.length || 0\n            picCount += newPics.length\n            if (picCount === 0) {\n                document.getElementById(\"picture-preview\").innerHTML = emptyPicsMsg\n            }\n        }\n\n        function getPropertyData() {\n            return JSON.parse(document.getElementById(\"property-data\").textContent)\n        }\n    </script><form hx-post=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("/api/property/pictures/" + property.Id)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 204, Col: 51}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" hx-encoding=\"multipart/form-data\" hx-swap=\"outerHTML\" hx-select=\"#property-pic-form\" class=\"relative border border-slate-300 rounded px-4 py-2 space-y-2 basis-1/2 grow-0 ml-auto z-0\" id=\"property-pic-form\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if successfulUpdate {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " data-successful-update")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "><div class=\"absolute flex top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-slate-700/65 items-center justify-center rounded invisible z-30\" id=\"property-pic-form-loading-spinner\"><div class=\"space-y-4\"><svg class=\"fill-slate-300 w-16 h-16 mx-auto animate-spin\"><use href=\"/static/svg/spinner.svg#spinner\"></use></svg><p class=\"text-xl font-semibold text-slate-300\">Cargando...</p></div></div><h3 class=\"font-bold text-slate-700\">Imagenes de la propiedad</h3><div class=\"basis-1/2 grow-0 space-y-1\"><label for=\"pics-inp\" class=\"block text-xs text-slate-400 font-semibold\">Imagenes</label> <input type=\"file\" name=\"pics-inp\" id=\"pics-inp\" class=\"w-full border border-slate-300 rounded px-2 py-1\" accept=\"image/*\" multiple></div><div class=\"flex flex-wrap gap-4 basis-full p-2 border border-slate-300 rounded\" id=\"picture-preview\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(property.Images) > 0 {
			for _, img := range property.Images {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"relative w-72 aspect-video z-0\"><img class=\"w-full h-full object-cover object-center rounded\" src=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs("/static/properties/" + property.Id + "/" + img)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 241, Col: 60}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" alt=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("Imagen de la propiedad " + property.Slug)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 242, Col: 54}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\"> <button type=\"button\" class=\"del-btn absolute top-2 right-2 h-6 w-6 opacity-80 hover:opacity-100 drop-shadow-slate-800 hover:drop-shadow-2xl\" data-pic-del-btn=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(img)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 247, Col: 29}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\"><svg class=\"h-6 w-6 fill-slate-50 z-10 hover:fill-red-500 \"><use href=\"/static/svg/times.svg#times\"></use></svg></button> <button type=\"button\" class=\"restore-btn absolute top-2 right-2 opacity-80 hover:opacity-100 drop-shadow-slate-800 hover:drop-shadow-2xl invisible\" data-pic-restore-btn=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(img)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 256, Col: 33}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\"><svg class=\"h-7 w-7 fill-slate-50 z-10 hover:fill-emerald-500\"><use href=\"/static/svg/undo.svg#undo\"></use></svg></button></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<p id=\"update-prop-pic-form-empty\" class=\"text-lg text-slate-300 font-bold py-12\">Agrega imagenes de la propiedad</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div><div class=\"py-1\"></div><div class=\"basis-1/2 grow-0 space-y-1\"><label for=\"prop-pic-inp\" class=\"block text-xs text-slate-400 font-semibold\">Imagen principal</label> <input type=\"file\" name=\"main-pic\" id=\"main-pic\" class=\"w-full border border-slate-300 rounded px-2 py-1\" accept=\"image/*\"></div><div class=\"flex flex-wrap gap-2 justify-evenly basis-full p-2 border border-slate-300 rounded\" id=\"main-preview\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if property.MainImg != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"relative w-72 aspect-video z-0 is-main-pic\" data-is-main-pic><img class=\"w-full h-full object-cover object-center rounded\" src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs("/static/properties/" + property.Id + "/" + property.MainImg)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 287, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "\" alt=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs("Imagen de la propiedad " + property.Slug)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 288, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\"> <button type=\"button\" class=\"del-btn absolute top-2 right-2 h-6 w-6 opacity-80 hover:opacity-100 drop-shadow-slate-800 hover:drop-shadow-2xl\" data-pic-del-btn=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(property.MainImg)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 293, Col: 41}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\"><svg class=\"h-6 w-6 fill-slate-50 z-10 hover:fill-red-500 \"><use href=\"/static/svg/times.svg#times\"></use></svg></button> <button type=\"button\" class=\"restore-btn absolute top-2 right-2 opacity-80 hover:opacity-100 drop-shadow-slate-800 hover:drop-shadow-2xl invisible\" data-pic-restore-btn=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(property.MainImg)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/components/update_prop_images_form.templ`, Line: 302, Col: 45}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\"><svg class=\"h-7 w-7 fill-slate-50 z-10 hover:fill-emerald-500\"><use href=\"/static/svg/undo.svg#undo\"></use></svg></button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<p id=\"update-prop-pic-form-main-empty\" class=\"text-lg text-slate-300 font-bold py-12\">Agrega la imagen principal para la propiedad</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div><div class=\"py-2\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if successfulUpdate {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<p class=\"text-emerald-500 font-medium invisible\" id=\"property-pic-form-success-msg\">Se actualizo la propiedad con exito</p><div class=\"py-1\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<div class=\"basis-full flex justify-end gap-2\"><!-- <div class=\"flex\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"update-prop-pic-form-cancel\"\n\t\t\t\t\tclass=\"basis-1/3 px-4 py-2 rounded bg-slate-500 text-stone-50 disabled:opacity-80\"\n\t\t\t\t\tdisabled\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</button>\n\t\t\t</div> --><div class=\"flex justify-end\"><button id=\"update-prop-pic-form-submit\" class=\"basis-1/3 px-4 py-2 rounded bg-slate-700 text-stone-50 disabled:opacity-80\" type=\"submit\">Enviar</button></div></div></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
