package components

import "github.com/vladwithcode/sibra-site/internal/db"
import "github.com/vladwithcode/sibra-site/internal"

func getPropertyURL(contract, id string) string {
	return "/propiedades/" + contract + "/" + id
}

templ PropertyCard(prop *db.Property) {
	<div class="relative flex flex-col justify-between bg-gray-200 rounded-sm shadow-sm shadow-zinc-400 p-4 overflow-hidden">
		if prop.MainImg != "" {
			<img src={ "/static/properties/" + prop.Id + "/" + prop.MainImg } alt="Fotografia de propiedad" class="absolute -z-10 inset-0 w-full max-h-full object-center object-cover m-auto"/>
		} else if len(prop.Images) > 0 {
			<img src={ "/static/properties/" + prop.Id + "/" + prop.Images[0] } alt="Fotografia de propiedad" class="absolute -z-10 inset-0 w-full max-h-full object-center object-cover m-auto"/>
		} else {
			<img src="/static/img/land-6.jpg" alt="Fotografia de propiedad" class="absolute -z-10 inset-0 w-full max-h-full object-center object-cover m-auto"/>
		}
		<h3 class="text-xl font-bold text-light mb-2" style="text-shadow: 0px 2px 6px rgba(0,0,0,0.8)">
			{ prop.Address }, { prop.NbHood } { prop.Zip }
		</h3>
		<div class="flex flex-col gap-4">
			<p class="text-light font-semibold" style="text-shadow: 0px 2px 6px rgba(0,0,0,0.8)">{ internal.FormatMoney(prop.Price) }</p>
			<a href={ getPropertyURL(prop.Contract, prop.Id) } class="flex items-center w-fit bg-light text-dark font-medium py-1 px-2 rounded capitalize">
				<span class="block">Ver más</span>
				<svg class="inline-block w-6 h-6 -mr-2 fill-current">
					<use href="/static/svg/sprites.svg#angle"></use>
				</svg>
			</a>
		</div>
	</div>
}

templ PropertyCardWithRowSpan(prop *db.Property, rowSpan string) {
	<div class={ "relative flex flex-col justify-between row-span-" + rowSpan + " col-span-1 bg-gray-200 rounded shadow-sm shadow-gray-800/20 p-4 overflow-hidden" }>
		if prop.MainImg != "" {
			<img
				src={ "/static/properties/" + prop.Id + "/" + prop.MainImg }
				alt="Fotografia de propiedad"
				class={ "absolute -z-10 inset-0 object-center object-cover m-auto", templ.KV("h-full max-w-full", rowSpan == "2"), templ.KV("w-full max-h-full", rowSpan != "2") }
			/>
		} else if len(prop.Images) > 0 {
			<img
				src={ "/static/properties/" + prop.Id + "/" + prop.Images[0] }
				alt="Fotografia de propiedad"
				class={ "absolute -z-10 inset-0 object-center object-cover m-auto", templ.KV("h-full max-w-full", rowSpan == "2"), templ.KV("w-full max-h-full", rowSpan != "2") }
			/>
		}
		<h3 class="text-xl font-bold text-light" style="text-shadow: 0px 0px 8px rgba(0,0,0,1)">{ prop.Address }, { prop.NbHood } { prop.Zip }</h3>
		<a href={ getPropertyURL(prop.Contract, prop.Id) } class="flex items-center w-fit bg-light text-zinc-800 font-semibold py-1 px-2 rounded capitalize">
			<span>Ver más</span>
			<svg class="inline-block w-6 h-6 -mr-2 fill-current">
				<use href="/static/svg/sprites.svg#angle"></use>
			</svg>
		</a>
	</div>
}
