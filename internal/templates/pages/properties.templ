package pages

import "github.com/vladwithcode/sibra-site/internal/db"
import "github.com/vladwithcode/sibra-site/internal/auth"
import "github.com/vladwithcode/sibra-site/internal/templates/layouts"
import "github.com/vladwithcode/sibra-site/internal/templates/components"
import "github.com/vladwithcode/sibra-site/internal"

templ Properties(contract string, properties []*db.Property, user *auth.Auth) {
	@layouts.Base("Propiedades en " + contract + " - Sibra Durango", user) {
		<div class="px-4 py-8">
			<h1 class="text-3xl font-bold text-center mb-8">Propiedades en { contract }</h1>
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
				for _, prop := range properties {
					@components.PropertyCard(prop)
				}
			</div>
			if len(properties) == 0 {
				<div class="text-center py-12">
					<p class="text-gray-600">No se encontraron propiedades.</p>
				</div>
			}
		</div>
	}
}

templ Property(contract string, id string, property *db.Property, nearbyProps []*db.Property, user *auth.Auth) {
	@layouts.Base("Propiedad - Sibra Durango", user) {
		<div class="px-4 py-8">
			if property != nil {
				<div class="max-w-6xl mx-auto">
					<h1 class="text-3xl font-bold mb-6">{ property.Address }, { property.NbHood }</h1>
					<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
						<div>
							if property.MainImg != "" {
								<img src={ "/static/properties/" + property.Id + "/" + property.MainImg } alt="Imagen principal" class="w-full h-64 object-cover rounded-lg"/>
							} else if len(property.Images) > 0 {
								<img src={ "/static/properties/" + property.Id + "/" + property.Images[0] } alt="Imagen principal" class="w-full h-64 object-cover rounded-lg"/>
							}
						</div>
						<div>
							<h2 class="text-2xl font-semibold mb-4">Detalles</h2>
							<p class="text-lg mb-2"><strong>Precio:</strong> { internal.FormatMoney(property.Price) }</p>
							<p class="text-lg mb-2"><strong>Tipo:</strong> { property.Contract }</p>
							<p class="text-lg mb-2"><strong>CÃ³digo Postal:</strong> { property.Zip }</p>
						</div>
					</div>
				</div>
			} else {
				<div class="text-center py-12">
					<p class="text-gray-600">Propiedad no encontrada.</p>
				</div>
			}
		</div>
	}
}