package pages

import "github.com/vladwithcode/sibra-site/internal/db"
import "github.com/vladwithcode/sibra-site/internal/auth"
import "github.com/vladwithcode/sibra-site/internal/templates/layouts"
import "strconv"

templ AdminPropertyForm(property *db.Property, user *auth.Auth) {
	@layouts.Admin(getFormTitle(property), user) {
		<div class="max-w-2xl">
			<h2 class="text-2xl font-bold mb-6">
				if property != nil {
					Editar Propiedad
				} else {
					Nueva Propiedad
				}
			</h2>
			<form method="POST" action="/api/property" class="space-y-6">
				if property != nil {
					<input type="hidden" name="id" value={ property.Id }/>
				}
				<div>
					<label for="address" class="block text-sm font-medium text-gray-700">Dirección</label>
					<input type="text" name="address" id="address" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" value={ getPropertyValue(property, "address") }/>
				</div>
				<div>
					<label for="nbhood" class="block text-sm font-medium text-gray-700">Colonia</label>
					<input type="text" name="nbhood" id="nbhood" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" value={ getPropertyValue(property, "nbhood") }/>
				</div>
				<div>
					<label for="zip" class="block text-sm font-medium text-gray-700">Código Postal</label>
					<input type="text" name="zip" id="zip" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" value={ getPropertyValue(property, "zip") }/>
				</div>
				<div>
					<label for="price" class="block text-sm font-medium text-gray-700">Precio</label>
					<input type="text" name="price" id="price" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" value={ getPropertyValue(property, "price") }/>
				</div>
				<div>
					<label for="contract" class="block text-sm font-medium text-gray-700">Tipo de Contrato</label>
					<select name="contract" id="contract" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
						<option value="">Seleccionar...</option>
						<option value="venta" selected?={ getPropertyValue(property, "contract") == "venta" }>Venta</option>
						<option value="renta" selected?={ getPropertyValue(property, "contract") == "renta" }>Renta</option>
					</select>
				</div>
				<div class="flex justify-end space-x-4">
					<a href="/admin/propiedades" class="bg-gray-300 text-gray-700 px-4 py-2 rounded hover:bg-gray-400">
						Cancelar
					</a>
					<button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
						if property != nil {
							Actualizar
						} else {
							Crear
						}
					</button>
				</div>
			</form>
		</div>
	}
}

func getFormTitle(property *db.Property) string {
	if property != nil {
		return "Editar Propiedad - Sibra Durango"
	}
	return "Nueva Propiedad - Sibra Durango"
}

func getPropertyValue(property *db.Property, field string) string {
	if property == nil {
		return ""
	}
	switch field {
	case "address":
		return property.Address
	case "nbhood":
		return property.NbHood
	case "zip":
		return property.Zip
	case "price":
		return strconv.FormatFloat(property.Price, 'f', 2, 64)
	case "contract":
		return property.Contract
	default:
		return ""
	}
}