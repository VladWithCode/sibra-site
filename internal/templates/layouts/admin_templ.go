// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/vladwithcode/sibra-site/internal/auth"
import "github.com/vladwithcode/sibra-site/internal/templates/partials"
import "github.com/vladwithcode/sibra-site/internal/templates/components"

func Admin(title string, user *auth.Auth) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"es-MX\"><head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.Head(title).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</head><body><script>\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\t\t\t// Select active navlink\n\t\t\t\tlet navLinks = document.querySelectorAll(\"[data-nav-href]\")\n\t\t\t\tlet path = window.location.pathname\n\n\t\t\t\tfor (l of navLinks) {\n\t\t\t\t\tif (path === l.dataset.navHref) {\n\t\t\t\t\t\tl.classList.replace(\"text-stone-400\", \"text-stone-700\")\n\t\t\t\t\t\tl.classList.add(\"font-bold\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\tl.classList.replace(\"text-stone-700\", \"text-stone-400\")\n\t\t\t\t\t\tl.classList.remove(\"font-bold\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t</script><div class=\"flex gap-0 w-screen h-screen overflow-hidden\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.AdminSidebar(user).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"flex flex-col flex-auto overflow-y-auto overflow-x-hidden\"><div class=\"basis-14 grow-0 shrink-0 flex items-center bg-stone-50 border-b border-slate-300 px-8\"><h1 class=\"font-semibold\">SIBRA</h1></div><div class=\"flex flex-col flex-auto py-2 px-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
